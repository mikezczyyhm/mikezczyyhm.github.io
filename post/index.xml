<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on  Michael&#39;s programming blog</title>
    <link>http://mikezczyyhm.github.io/post/</link>
    <description>Recent content in Posts on  Michael&#39;s programming blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://mikezczyyhm.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Immutable data is the main key to simple code</title>
      <link>http://mikezczyyhm.github.io/post/code_simplicity_02/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/code_simplicity_02/</guid>
      <description>&lt;p&gt;Use immutable data like a pro.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Code Simplicity Chart (c)</title>
      <link>http://mikezczyyhm.github.io/post/code_simplicity_01/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/code_simplicity_01/</guid>
      <description>&lt;p&gt;How to understand if your code is simple or complex.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Is programming actually math?</title>
      <link>http://mikezczyyhm.github.io/post/is_programming_actually_math/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/is_programming_actually_math/</guid>
      <description>&lt;p&gt;The main difference between programming and math is&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>When to NOT use RxJava</title>
      <link>http://mikezczyyhm.github.io/post/when_to_not_use_rxjava/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/when_to_not_use_rxjava/</guid>
      <description>&lt;p&gt;RxJava is very powerful.
It solves a great amount of tasks easily.
But using it in wrong places can turn any codebase into an unmaintainable and buggy mess.
Here I will try to explain where RxJava can help and in which cases it is better to avoid using it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Managing state reactive way</title>
      <link>http://mikezczyyhm.github.io/post/managing_state_reactive_way/</link>
      <pubDate>Sun, 25 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/managing_state_reactive_way/</guid>
      <description>&lt;p&gt;RxJava nice and easily covers our multithreading needs.
But it provides only a half of the solution.
While we can compose functions with RxJava, there is no safe way we can have
our state (field variables) handled without race conditions and low-level synchronization blocks.&lt;/p&gt;

&lt;p&gt;This article describes a simple and practical way for solving multithreading issues
that appear even when we&amp;rsquo;re using such advanced technology as RxJava.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why lambdas matter (even on Android)</title>
      <link>http://mikezczyyhm.github.io/post/why_lambdas_matter_even_on_android/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/why_lambdas_matter_even_on_android/</guid>
      <description>&lt;p&gt;A little knowledge exchange from an active lambdas user.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Term: &lt;strong&gt;Lambda&lt;/strong&gt; is an anonymous function.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RxJava magic (finally) goes away</title>
      <link>http://mikezczyyhm.github.io/post/rxjava_magic_finally_goes_away/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/rxjava_magic_finally_goes_away/</guid>
      <description>&lt;p&gt;There is too much &amp;ldquo;magic&amp;rdquo; inside of RxJava.&lt;/p&gt;

&lt;p&gt;Docs and tutorials are either too shallow or too complicated.&lt;/p&gt;

&lt;p&gt;Here is the middle ground that is &lt;em&gt;essential&lt;/em&gt; to know before playing with RxJava.&lt;/p&gt;

&lt;p&gt;In these tests we will take each RxJava part&amp;hellip; apart and explore how exactly it works.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to have 100% code coverage with tests and be sane</title>
      <link>http://mikezczyyhm.github.io/post/how_to_have_100_percent_code_coverage/</link>
      <pubDate>Sat, 19 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/how_to_have_100_percent_code_coverage/</guid>
      <description>&lt;p&gt;In this article I will discuss unit testing approaches,
show a quick and elegant solution to unit tests complexity,
benefits of having 100% code coverage with tests
and how achieve it easily.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introduction to Model View Presenter on Android</title>
      <link>http://mikezczyyhm.github.io/post/introduction_to_model_view_presenter_on_android/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/introduction_to_model_view_presenter_on_android/</guid>
      <description>&lt;p&gt;This article is a step-by-step introduction to MVP on Android, from a simplest possible
example to best practices. The article also introduces a new library
that makes MVP on Android extremely simple.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Snorkeling with Dagger 2</title>
      <link>http://mikezczyyhm.github.io/post/snorkeling_with_dagger_2/</link>
      <pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://mikezczyyhm.github.io/post/snorkeling_with_dagger_2/</guid>
      <description>&lt;p&gt;Dagger is a popular library for Java, it makes writing code much easier and more structured.
In this article I will describe how can we benefit of using it,
show some simple use cases and explore the generated code.
As a bonus, I will show an advanced trick that makes Dagger 2 much more flexible.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>